{"version":3,"sources":["src/app/form-module/services/formtype.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,QAAa,eAAb;AAAA;AAAA;AACE,+BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AACZ,aAAA,WAAA,GAAc,gDAAA,CAAA,aAAA,CAAA,CAAY,OAAZ,GAAsB,WAApC;AAEA,aAAA,WAAA,GAAc,gDAAA,CAAA,aAAA,CAAA,CAAY,OAAZ,GAAsB,OAApC;AAEA,aAAA,YAAA,GAAe,gDAAA,CAAA,aAAA,CAAA,CAAY,OAAZ,GAAsB,WAArC;AALiC;;AAD3C;AAAA;AAAA,oCAQc,EARd,EAQwB;AACpB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA6B,KAAK,WAAL,GAAmB,EAAhD,CAAP;AACD;AAVH;AAAA;AAAA,qCAWe,QAXf,EAWsC;AAClC,eAAK,IAAL,CAAU,IAAV,CAAe,KAAK,WAAL,GAAmB,KAAlC,EAAyC,QAAzC,EAAmD,SAAnD,CACE,UAAC,QAAD,EAAa;AACX,YAAA,MAAM,CAAC,KAAP,CAAa,QAAb;AACD,WAHH;AAKD;AAjBH;AAAA;AAAA,oCAkBc,QAlBd,EAkBqC;AACjC,eAAK,IAAL,CAAU,GAAV,CAAc,KAAK,WAAL,GAAmB,QAAjC,EAA2C,QAA3C,EAAqD,SAArD,CACE,UAAC,QAAD,EAAa;AACb,YAAA,MAAM,CAAC,KAAP,CAAa,QAAb;AACD,WAHD;AAID;AAvBH;AAAA;AAAA,uCAwBiB,EAxBjB,EAwB2B;AACvB,eAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,WAAL,GAAmB,EAApC,EAAwC,SAAxC,CACE,UAAC,QAAD,EAAa;AACX,YAAA,MAAM,CAAC,KAAP,CAAa,QAAb;AACD,WAHH;AAID;AA7BH;AAAA;AAAA,yCA8BmB,QA9BnB,EA8BmC;AAC/B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAoC,KAAK,WAAL,GAAmB,QAAvD,CAAP;AACD;AAhCH;AAAA;AAAA,yCAiCmB,QAjCnB,EAiCmC;AAC/B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsC,KAAK,WAAL,GAAmB,QAAnB,GAA8B,QAApE,CAAP;AACD;AAnCH;AAAA;AAAA,0CAoCoB,aApCpB,EAoCyD;AACrD,eAAK,IAAL,CAAU,IAAV,CAAe,KAAK,YAApB,EAAmC,aAAnC,EAAkD,SAAlD,CACE,UAAC,QAAD,EAAa;AACX,YAAA,MAAM,CAAC,KAAP,CAAa,QAAb;AACD,WAHH;AAKD;AA1CH;;AAAA;AAAA,OAAA;;;;cAC4B,iDAAA,CAAA,YAAA;;;;AADf,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormTypeModel } from '../models/form-type-model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { FormDataModel } from '../models/form-data-model';\nimport { AppSettings } from '../../utils/app-settings';\nimport { UserIdNameModel } from '../models/user-id-name-model';\nimport { Assignformmodel } from '../models/assignformmodel';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormtypeService {\n  constructor(private http: HttpClient) { }\n  private formTypeUrl = AppSettings.baseUrl + 'formtype/';\n\n  private formDataUrl = AppSettings.baseUrl + 'form/';\n\n  private userFormsUrl = AppSettings.baseUrl + 'userforms';\n\n  getFormType(id: string): Observable<FormTypeModel> {\n    return this.http.get<FormTypeModel>(this.formTypeUrl + id);\n  }\n  postFormData(formData: FormDataModel) {\n    this.http.post(this.formDataUrl + 'add', formData).subscribe(\n      (response) => {\n        window.alert(response);\n      }\n    );\n  }\n  putFormData(formData: FormDataModel) {\n    this.http.put(this.formDataUrl + 'update', formData).subscribe(\n      (response) => {\n      window.alert(response);\n    });\n  }\n  deleteFormData(id: number) {\n    this.http.delete(this.formDataUrl + id).subscribe(\n      (response) => {\n        window.alert(response);\n      });\n  }\n  getFormsToAssign(formName: string): Observable<Array<FormDataModel>> {\n    return this.http.get<Array<FormDataModel>>(this.formDataUrl + formName);\n  }\n  getUsersToAssign(formType: string): Observable<Array<UserIdNameModel>> {\n    return this.http.get<Array<UserIdNameModel>>(this.formDataUrl + 'users/' + formType);\n  }\n  postUserFormsData(userFormsData: Array<Assignformmodel>) {\n    this.http.post(this.userFormsUrl , userFormsData).subscribe(\n      (response) => {\n        window.alert(response);\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}