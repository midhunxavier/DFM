{"version":3,"sources":["./src/app/form-module/services/formtype.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AAEoB;AAGR;AAQvD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAC5B,gBAAW,GAAG,+DAAW,CAAC,OAAO,GAAG,WAAW,CAAC;QAEhD,gBAAW,GAAG,+DAAW,CAAC,OAAO,GAAG,OAAO,CAAC;QAE5C,iBAAY,GAAG,+DAAW,CAAC,OAAO,GAAG,WAAW,CAAC;IALjB,CAAC;IAOzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;IAC7D,CAAC;IACD,YAAY,CAAC,QAAuB;QAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAC1D,CAAC,QAAQ,EAAE,EAAE;YACX,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,WAAW,CAAC,QAAuB;QACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,QAAQ,EAAE,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,SAAS,CAC/C,CAAC,QAAQ,EAAE,EAAE;YACX,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gBAAgB,CAAC,QAAgB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC;IAC1E,CAAC;IACD,gBAAgB,CAAC,QAAgB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACvF,CAAC;IACD,iBAAiB,CAAC,aAAqC;QACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAG,aAAa,CAAC,CAAC,SAAS,CACzD,CAAC,QAAQ,EAAE,EAAE;YACX,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YA1C2B,+DAAU;;AADzB,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA2C3B;AA3C2B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormTypeModel } from '../models/form-type-model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { FormDataModel } from '../models/form-data-model';\nimport { AppSettings } from '../../utils/app-settings';\nimport { UserIdNameModel } from '../models/user-id-name-model';\nimport { Assignformmodel } from '../models/assignformmodel';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormtypeService {\n  constructor(private http: HttpClient) { }\n  private formTypeUrl = AppSettings.baseUrl + 'formtype/';\n\n  private formDataUrl = AppSettings.baseUrl + 'form/';\n\n  private userFormsUrl = AppSettings.baseUrl + 'userforms';\n\n  getFormType(id: string): Observable<FormTypeModel> {\n    return this.http.get<FormTypeModel>(this.formTypeUrl + id);\n  }\n  postFormData(formData: FormDataModel) {\n    this.http.post(this.formDataUrl + 'add', formData).subscribe(\n      (response) => {\n        window.alert(response);\n      }\n    );\n  }\n  putFormData(formData: FormDataModel) {\n    this.http.put(this.formDataUrl + 'update', formData).subscribe(\n      (response) => {\n      window.alert(response);\n    });\n  }\n  deleteFormData(id: number) {\n    this.http.delete(this.formDataUrl + id).subscribe(\n      (response) => {\n        window.alert(response);\n      });\n  }\n  getFormsToAssign(formName: string): Observable<Array<FormDataModel>> {\n    return this.http.get<Array<FormDataModel>>(this.formDataUrl + formName);\n  }\n  getUsersToAssign(formType: string): Observable<Array<UserIdNameModel>> {\n    return this.http.get<Array<UserIdNameModel>>(this.formDataUrl + 'users/' + formType);\n  }\n  postUserFormsData(userFormsData: Array<Assignformmodel>) {\n    this.http.post(this.userFormsUrl , userFormsData).subscribe(\n      (response) => {\n        window.alert(response);\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}